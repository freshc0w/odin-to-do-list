(()=>{"use strict";class t{constructor(t,e,s,i,n){this.name=t,this.description=e,this.dueDate=s,this.priority=i,this.id=n}set name(t){this._name=t}get name(){return this._name}get id(){return this._id}set id(t){this._id=t}get priority(){return this._priority}set priority(t){this._priority=t}get description(){return this._description}set description(t){this._description=t}get dueDate(){return this._dueDate}set dueDate(t){this._dueDate=t}get dueDateFormatted(){return`${this.dueDate.split("-")[0]}/${this.dueDate.split("-")[1]}/${this.dueDate.split("-")[2]}`}}class e{constructor(t){this.name=t,this.tasks=[]}get name(){return this._name}set name(t){this._name=t}get tasks(){return this._tasks}set tasks(t){this._tasks=t}addTask(t){this._tasks.push(t)}deleteTask(t){this._tasks=this._tasks.filter((e=>e.id!==t))}reInitialiseId(){for(let t=0;t<this.tasks.length;t++)this.tasks[t].id=t}}class s{constructor(){this.projects=[],this.projects.push(new e("Inbox")),this.projects.push(new e("Today")),this.projects.push(new e("This Week")),this.projects.push(new e("React"))}get projects(){return this._projects}set projects(t){this._projects=t}contains(t){return this.projects.some((e=>e.name===t))}getProject(t){return this.projects.find((e=>e.name===t))}addProject(t){this.contains(t)||this.projects.push(new e(t))}deleteProject(t){const e=this.projects.find((e=>e.name===t));this.projects.splice(this.projects.indexOf(e),1)}}class i{constructor(t){this.task=t}renderInfo(t,e,s=""){const i=document.createElement(t);return i.classList.add(e),i.textContent=s,i}createElements(t){const e=this.renderInfo("input","statusCheck");e.setAttribute("type","checkbox"),e.setAttribute("id","statusCheck"),e.addEventListener("change",(e=>{e.target.checked?t.style.opacity="40%":t.style.opacity="100%"}));const s=this.renderInfo("div","taskName",this.task.name),i=this.renderInfo("button","uniqueBtn","Details");i.classList.add("details");const n=this.renderInfo("div","statusPrio"),a=this.renderInfo("i","material-icons","warning");a.classList.add(this.task.priority),n.appendChild(a);const d=this.renderInfo("div","taskDate",this.task.dueDateFormatted),r=this.renderInfo("div","taskEdit"),o=this.renderInfo("i","material-icons","edit");r.appendChild(o);const c=this.renderInfo("div","taskDel"),l=this.renderInfo("i","material-icons","delete");return c.setAttribute("id",`delTask-${this.task.id}`),c.appendChild(l),[e,s,i,n,d,r,c]}draw(){const t=this.renderInfo("div","task-container"),e=this.createElements(t);for(let s of e)t.appendChild(s);return t}}class n{constructor(t){this.project=t}draw(){const t=document.querySelector("#main-content");this.clear(t),this.drawTasks(t,this.project.tasks);const e=this.addTaskOption();t.appendChild(e)}addTaskOption(){const t=document.createElement("div");t.classList.add("task-container"),t.classList.add("add");const e=document.createElement("button");return e.classList.add("uniqueBtn"),e.classList.add("add"),e.textContent="ADD",t.appendChild(e),t}drawTasks(t,e){for(let s of e){const e=new i(s);t.appendChild(e.draw())}}clear(t){t.innerHTML=""}completeTask(){document.getElementById()}}(new class{constructor(){this.toDoList=new s,this.currentProjectPage="Inbox",this.currentForm=(()=>{const t=document.querySelector(".form-container"),e=()=>{const t=document.createElement("img");return t.classList.add("closeFormBtn"),t.src="../../../imgs/mac-close-btn.png",t.alt="A button that closes the form.",t.addEventListener("click",(()=>{const t=document.querySelector("form"),e=document.querySelector(".face-mask");t.style.visibility="hidden",e.style.visibility="hidden"})),t},s=()=>{const t=document.createElement("div"),e=document.createElement("label");e.classList.add("dateLabel"),e.setAttribute("for","inputDueDate"),e.textContent="Due Date:";const s=document.createElement("input");return s.setAttribute("type","date"),s.setAttribute("id","inputDueDate"),s.setAttribute("name","trip-start"),t.appendChild(e),t.appendChild(s),t},i=()=>{const t=document.createElement("div"),e=document.createElement("div"),s=document.createElement("div");t.classList.add("prioWrapper"),s.classList.add("prioOptions"),e.classList.add("prioLabel"),e.textContent="How important is this task?";const i=d("lowPrio","low"),n=d("medPrio","medium"),a=d("highPrio","high");for(let t of[i,n,a])s.appendChild(t);return t.appendChild(e),t.appendChild(s),t;function d(t,e){const s=document.createElement("div"),i=document.createElement("input"),n={type:"radio",id:t,name:"prio",value:e};for(let t in n)i.setAttribute(t,n[t]);const a=document.createElement("label");return a.setAttribute("for",t),a.classList.add(t),a.textContent=e,s.appendChild(i),s.appendChild(a),s}};return{addTask:()=>{const n=((t,e,s,i=!0)=>{const n=document.createElement("div"),a=document.createElement("label");a.setAttribute("for",s),a.textContent=t;const d=document.createElement("input"),r={type:"text",id:s,name:s,placeholder:e};for(let t in r)d.setAttribute(t,r[t]);return d.required=i,n.appendChild(a),n.appendChild(d),n})("Task Title: ","e.g. Learn React in 20 days..","inputTaskTitle");n.classList.add("inputTaskTitle");const a=((t,e,s,i=!0)=>{const n=document.createElement("div"),a=document.createElement("label");a.setAttribute("for",s),a.textContent=t;const d=document.createElement("textarea"),r={id:s,name:s,placeholder:e,rows:6,cols:50};for(let t in r)d.setAttribute(t,r[t]);return d.required=i,n.appendChild(a),n.appendChild(d),n})("Task Details: ","e.g. Not an task. Remember to take breaks and walk outside.","inputTaskDetails");a.classList.add("inputTaskDetails");const d=[n,a,i(),s(),e()];for(let e of d)t.appendChild(e);const r=(()=>{const t=document.createElement("button");return t.classList.add("uniqueBtn"),t.classList.add("appendTaskBtn"),t.textContent="Add Task",t.setAttribute("type","submit"),t})();t.appendChild(r),document.getElementById("medPrio").checked=!0},clear:()=>{for(;t.firstChild;)t.removeChild(t.lastChild)},collectTaskInfo:()=>{const t=document.getElementById("inputTaskTitle"),e=document.getElementById("inputTaskDetails"),s=document.querySelector('input[name="prio"]:checked'),i=document.querySelector("#inputDueDate");return{title:t.value,details:e.value,priority:s.value,date:i.value}}}})()}loadHomePage(){this.addNewTask(this.currentProjectPage,{title:"Walking the dog",details:"He is asking for it so this task is a must",priority:"medium",date:"25-02-2002"}),this.loadSideBar()}loadPage(t){this.toDoList.getProject(t).reInitialiseId(),this.drawPage(t),this.addTaskFunction(t),this.applyDelTaskFunction(t)}drawPage(t){new n(this.toDoList.getProject(t)).draw()}addTaskFunction(t){document.querySelector(".uniqueBtn.add").addEventListener("click",(()=>{this.currentForm.clear(),this.currentForm.addTask(),document.getElementById("medPrio").checked=!0,document.querySelector("form").style.visibility="visible",document.querySelector(".face-mask").style.visibility="visible",inputDueDate.valueAsDate=new Date;const e=document.querySelector(".uniqueBtn.appendTaskBtn");this.submitTaskFunction(e,t)}))}addNewTask(e,s){this.toDoList.getProject(e).addTask(new t(s.title,s.details,s.date,s.priority,this.toDoList.getProject(e).tasks.length)),this.loadPage(e)}submitTaskFunction(t,e){t.addEventListener("click",(t=>{const s=this.currentForm.collectTaskInfo();this.addNewTask(e,s),document.querySelector("form").style.visibility="hidden",document.querySelector(".face-mask").style.visibility="hidden",t.preventDefault()}))}removeTaskFunction(t,e){document.getElementById(`delTask-${e}`).addEventListener("click",(()=>{this.toDoList.getProject(t).deleteTask(e),this.loadPage(t)}))}applyDelTaskFunction(t){this.toDoList.getProject(t).tasks.map((e=>{this.removeTaskFunction(t,e.id)}))}loadSideBar(){this.addSlideInOut(),this.drawInboxTabs(),this.drawProjectTabs()}drawInboxTabs(){const t=document.createElement("ul");this.addTab(t,"Today"),this.addTab(t,"This Week");const e=document.querySelector(".inbox-bar");e.appendChild(t),this.addDropDownMenu(e,t)}drawProjectTabs(){const t=["Inbox","Today","This Week"],e=this.toDoList.projects.filter((e=>!t.includes(e.name))),s=document.createElement("ul");for(let t of e)this.addTab(s,t.name);const i=document.querySelector(".project-bar");i.appendChild(s),this.addDropDownMenu(i,s)}addDropDownMenu(t,e){t.addEventListener("mouseover",(()=>{e.style.display="block"})),t.addEventListener("mouseout",(()=>{e.style.display="none"}))}addTab(t,e){const s=document.createElement("li");s.textContent=this.toDoList.getProject(e).name,t.appendChild(s)}addSlideInOut(){const t=document.getElementById("sideBar");t.addEventListener("mouseover",(()=>{t.style.width="200px"})),t.addEventListener("mouseout",(()=>{t.style.width="65px"}))}}).loadHomePage()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFnQkssRUFBWUQsRUFDbEMsQ0FFQUosZ0JBQWdCTSxFQUFTQyxHQUV4QkQsRUFBUTVHLGlCQUFpQixhQUFhLEtBQ3JDNkcsRUFBS3pHLE1BQU0wRyxRQUFVLE9BQU8sSUFFN0JGLEVBQVE1RyxpQkFBaUIsWUFBWSxLQUNwQzZHLEVBQUt6RyxNQUFNMEcsUUFBVSxNQUFNLEdBRTdCLENBQ0FWLE9BQU9XLEVBQVN6SSxHQUVmLE1BQU0wSSxFQUFNekgsU0FBU0MsY0FBYyxNQUVuQ3dILEVBQUlySCxZQUFjOUMsS0FBS2tGLFNBQVN0RCxXQUFXSCxHQUFhOUIsS0FDeER1SyxFQUFRdkcsWUFBWXdHLEVBQ3JCLENBRUFoQixnQkFDQyxNQUFNaUIsRUFBVTFILFNBQVN1QyxlQUFlLFdBQ3hDbUYsRUFBUWpILGlCQUFpQixhQUFhLEtBQ3JDaUgsRUFBUTdHLE1BQU04RyxNQUFRLE9BQU8sSUFFOUJELEVBQVFqSCxpQkFBaUIsWUFBWSxLQUNwQ2lILEVBQVE3RyxNQUFNOEcsTUFBUSxNQUFNLEdBRTlCLElEekthbkMsYyIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tdG8tZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Rhc2suanMiLCJ3ZWJwYWNrOi8vb2Rpbi10by1kby1saXN0Ly4vc3JjL21vZHVsZXMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvLWRvLWxpc3QvLi9zcmMvbW9kdWxlcy9BbGxQcm9qZWN0cy5qcyIsIndlYnBhY2s6Ly9vZGluLXRvLWRvLWxpc3QvLi9zcmMvbW9kdWxlcy9VSS9Qcm9qZWN0VUkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10by1kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL29kaW4tdG8tZG8tbGlzdC8uL3NyYy9tb2R1bGVzL1VJLmpzIiwid2VicGFjazovL29kaW4tdG8tZG8tbGlzdC8uL3NyYy9tb2R1bGVzL1VJL2Zvcm0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFzayB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBpZCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy5pZCA9IGlkOyAvLyBUbyBhbGxvdyBkZWxldGlvbiBvZiB0YXNrIHdpdGggdGhlIHNhbWUgbmFtZTtcbiAgICAgICAgXG4gICAgfVxuICAgIHNldCBuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX25hbWUgPSB2YWx1ZTtcbiAgICB9O1xuXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH07XG4gICAgXG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfTtcbiAgICBzZXQgaWQodmFsdWUpIHtcbiAgICAgICAgdGhpcy5faWQgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IHByaW9yaXR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJpb3JpdHk7XG4gICAgfVxuICAgIHNldCBwcmlvcml0eSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9wcmlvcml0eSA9IHZhbHVlO1xuICAgIH1cbiAgICBcbiAgICBnZXQgZGVzY3JpcHRpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9kZXNjcmlwdGlvbjtcbiAgICB9O1xuICAgIHNldCBkZXNjcmlwdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IHZhbHVlO1xuICAgIH07XG5cbiAgICBnZXQgZHVlRGF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2R1ZURhdGU7XG4gICAgfTtcbiAgICBzZXQgZHVlRGF0ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9kdWVEYXRlID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBkdWVEYXRlRm9ybWF0dGVkKCkge1xuICAgICAgICBjb25zdCBkYXkgPSB0aGlzLmR1ZURhdGUuc3BsaXQoJy0nKVswXTtcbiAgICAgICAgY29uc3QgbW9udGggPSB0aGlzLmR1ZURhdGUuc3BsaXQoJy0nKVsxXTtcbiAgICAgICAgY29uc3QgeWVhciA9IHRoaXMuZHVlRGF0ZS5zcGxpdCgnLScpWzJdO1xuXG4gICAgICAgIHJldHVybiBgJHtkYXl9LyR7bW9udGh9LyR7eWVhcn1gO1xuICAgIH07XG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2plY3Qge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50YXNrcyA9IFtdO1xuICAgIH07XG4gICAgXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH07XG4gICAgc2V0IG5hbWUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fbmFtZSA9IHZhbHVlO1xuICAgIH07XG4gICAgZ2V0IHRhc2tzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdGFza3M7XG4gICAgfTtcbiAgICBzZXQgdGFza3ModmFsdWUpIHtcbiAgICAgICAgdGhpcy5fdGFza3MgPSB2YWx1ZTtcbiAgICB9XG4gICAgYWRkVGFzayh0YXNrKSB7XG4gICAgICAgIHRoaXMuX3Rhc2tzLnB1c2godGFzayk7ICAgICAgICBcbiAgICB9O1xuICAgIGRlbGV0ZVRhc2sodGFza0lkKSB7XG4gICAgICAgIHRoaXMuX3Rhc2tzID0gdGhpcy5fdGFza3MuZmlsdGVyKHRhc2sgPT4gdGFzay5pZCAhPT0gdGFza0lkKTtcbiAgICB9O1xuICAgIHJlSW5pdGlhbGlzZUlkKCkge1xuICAgICAgICBmb3IobGV0IG5ld0lkID0gMDsgbmV3SWQgPCB0aGlzLnRhc2tzLmxlbmd0aDsgbmV3SWQrKykge1xuICAgICAgICAgICAgdGhpcy50YXNrc1tuZXdJZF0uaWQgPSBuZXdJZDsgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBUbyBiZSBhZGRlZDogR2V0IHRvZGF5J3MgYW5kIHRoaXMgd2VlaydzIHRhc2tzLiBcbn07IiwiaW1wb3J0IFRhc2sgZnJvbSBcIi4vdGFza1wiO1xuaW1wb3J0IFByb2plY3QgZnJvbSBcIi4vcHJvamVjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbGxQcm9qZWN0cyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucHJvamVjdHMgPSBbXTtcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKG5ldyBQcm9qZWN0KCdJbmJveCcpKTtcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKG5ldyBQcm9qZWN0KCdUb2RheScpKTtcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKG5ldyBQcm9qZWN0KCdUaGlzIFdlZWsnKSk7XG4gICAgICAgIHRoaXMucHJvamVjdHMucHVzaChuZXcgUHJvamVjdCgnUmVhY3QnKSk7XG4gICAgfTtcblxuICAgIGdldCBwcm9qZWN0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb2plY3RzO1xuICAgIH07XG4gICAgc2V0IHByb2plY3RzKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3Byb2plY3RzID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgaWYgcHJvamVjdCBuYW1lIGV4aXN0cyBpbiBsaXN0IG9mIHByb2plY3RzLlxuICAgIGNvbnRhaW5zKHByb2plY3ROYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb2plY3RzLnNvbWUocHJvamVjdCA9PiBwcm9qZWN0Lm5hbWUgPT09IHByb2plY3ROYW1lKTtcbiAgICB9O1xuXG4gICAgZ2V0UHJvamVjdChwcm9qZWN0TmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9qZWN0cy5maW5kKHByb2plY3QgPT4gcHJvamVjdC5uYW1lID09PSBwcm9qZWN0TmFtZSk7XG4gICAgfTtcblxuICAgIGFkZFByb2plY3QobmV3UHJvamVjdE5hbWUpIHtcbiAgICAgICAgLy8gQ2Fubm90IGhhdmUgc2FtZSBwcm9qZWN0IG5hbWVzLlxuICAgICAgICBpZiAodGhpcy5jb250YWlucyhuZXdQcm9qZWN0TmFtZSkpIHJldHVybjtcbiAgICAgICAgdGhpcy5wcm9qZWN0cy5wdXNoKG5ldyBQcm9qZWN0KG5ld1Byb2plY3ROYW1lKSk7XG4gICAgfTtcblxuICAgIGRlbGV0ZVByb2plY3QocHJvamVjdE5hbWUpIHtcbiAgICAgICAgY29uc3QgcHJvamVjdFRvRGVsZXRlID0gdGhpcy5wcm9qZWN0cy5maW5kKHByb2plY3QgPT4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2plY3QubmFtZSA9PT0gcHJvamVjdE5hbWUpO1xuICAgICAgICB0aGlzLnByb2plY3RzLnNwbGljZSh0aGlzLnByb2plY3RzLmluZGV4T2YocHJvamVjdFRvRGVsZXRlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSlcbiAgICB9O1xuICAgIFxuXG4gICAgLy8gQ2FuIGFkZCB0b2RheSdzIGFuZCB0aGlzIHdlZWsncyBmdW5jdGlvbmFsaXR5LlxufTsiLCJpbXBvcnQgVGFzayBmcm9tIFwiLi4vdGFza1wiO1xuaW1wb3J0IFByb2plY3QgZnJvbSBcIi4uL3Byb2plY3RcIjtcblxuY2xhc3MgVGFza1VJIHtcblx0Ly8gUHVycG9zZSBvZiB0aGlzIGNsYXNzIGl0IHRvIHRha2UgaW4gYSB0YXNrIG9iaiwgYW5kIHR1cm4gaXQgaW50b1xuXHQvLyBhIGRpdiB3aXRoIGFsbCByZWxldmFudCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhlIHRhc2suXG5cdC8vIEZyb20gbGVmdC10by1yaWdodDogW2NoZWNrQm94LCBuYW1lLCBkZXRhaWxzLCBwcmlvcml0eSwgZGF0ZSwgZWRpdEljb24sIGJpbkljb25dXG5cdGNvbnN0cnVjdG9yKHRhc2tPYmopIHtcblx0XHR0aGlzLnRhc2sgPSB0YXNrT2JqO1xuXHR9XG5cdHJlbmRlckluZm8oZWxlbSwgYWRkZWRDbGFzcywgdGV4dCA9IFwiXCIpIHtcblx0XHRjb25zdCBuYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbGVtKTtcblx0XHRuYW1lLmNsYXNzTGlzdC5hZGQoYWRkZWRDbGFzcyk7XG5cdFx0bmFtZS50ZXh0Q29udGVudCA9IHRleHQ7IC8vIGRlZmF1bHQgZW1wdHkgc3RyXG5cblx0XHRyZXR1cm4gbmFtZTtcblx0fVxuXHRjcmVhdGVFbGVtZW50cyh0YXNrQ29udGFpbmVyKSB7XG5cdFx0Y29uc3Qgc3RhdHVzQ2hlY2sgPSB0aGlzLnJlbmRlckluZm8oXCJpbnB1dFwiLCBcInN0YXR1c0NoZWNrXCIpO1xuXHRcdHN0YXR1c0NoZWNrLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJjaGVja2JveFwiKTtcblx0XHRzdGF0dXNDaGVjay5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInN0YXR1c0NoZWNrXCIpO1xuXHRcdHN0YXR1c0NoZWNrLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGV2ZW50KSA9PiB7XG5cdFx0XHRpZiAoZXZlbnQudGFyZ2V0LmNoZWNrZWQpIHtcblx0XHRcdFx0dGFza0NvbnRhaW5lci5zdHlsZS5vcGFjaXR5ID0gXCI0MCVcIjtcblx0XHRcdFx0Ly8gdGFza0NvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGUoMC45ODUpJztcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRhc2tDb250YWluZXIuc3R5bGUub3BhY2l0eSA9IFwiMTAwJVwiO1xuXHRcdFx0XHQvLyB0YXNrQ29udGFpbmVyLnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSgxKSc7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRjb25zdCBuYW1lID0gdGhpcy5yZW5kZXJJbmZvKFwiZGl2XCIsIFwidGFza05hbWVcIiwgdGhpcy50YXNrLm5hbWUpO1xuXG5cdFx0Ly8gV2hlbiBjbGlja2VkLCBwb3AgdXAgYSBmb3JtIHdoZXJlIHRoZSBkZXRhaWxzIG9mIHRoZSB0YXNrIGlzIGRpc3BsYXllZC5cblx0XHRjb25zdCBkZXRhaWxzQnRuID0gdGhpcy5yZW5kZXJJbmZvKFwiYnV0dG9uXCIsIFwidW5pcXVlQnRuXCIsIFwiRGV0YWlsc1wiKTtcblx0XHRkZXRhaWxzQnRuLmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzXCIpO1xuXG5cdFx0Ly8gUHJpb3JpdHkgaWNvblxuXHRcdGNvbnN0IHByaW9yaXR5ID0gdGhpcy5yZW5kZXJJbmZvKFwiZGl2XCIsIFwic3RhdHVzUHJpb1wiKTtcblx0XHRjb25zdCBwcmlvcml0eUljb24gPSB0aGlzLnJlbmRlckluZm8oXCJpXCIsIFwibWF0ZXJpYWwtaWNvbnNcIiwgXCJ3YXJuaW5nXCIpO1xuXG5cdFx0Ly8gQ2hhbmdlIGNvbG9yIGJhc2VkIG9uIHByaW9yaXR5IG9mIHRhc2sgLT4gWydoaWdoJywgJ21lZGl1bScsICdsb3cnXVxuXHRcdHByaW9yaXR5SWNvbi5jbGFzc0xpc3QuYWRkKHRoaXMudGFzay5wcmlvcml0eSk7XG5cdFx0cHJpb3JpdHkuYXBwZW5kQ2hpbGQocHJpb3JpdHlJY29uKTtcblxuXHRcdC8vIEp1c3QgYSBtb2NrIGRhdGUgZm9yIG5vdy4gU3ViamVjdCB0byBjaGFuZ2UgYmFzZWQgb24gdXNlciBpbnB1dC5cblx0XHQvLyBjb25zdCB0aW1lRWxhcHNlZCA9IERhdGUubm93KCk7XG5cdFx0Ly8gY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSh0aW1lRWxhcHNlZCk7XG5cdFx0Ly8gY29uc3QgZGF0ZSA9IHRoaXMucmVuZGVySW5mbyhcblx0XHQvLyBcdFwiZGl2XCIsXG5cdFx0Ly8gXHRcInRhc2tEYXRlXCIsXG5cdFx0Ly8gXHRgJHt0b2RheS50b0xvY2FsZURhdGVTdHJpbmcoKX1gXG5cdFx0Ly8gKTtcblxuXHRcdGNvbnN0IGRhdGUgPSB0aGlzLnJlbmRlckluZm8oXG5cdFx0XHRcImRpdlwiLFxuXHRcdFx0XCJ0YXNrRGF0ZVwiLFxuXHRcdFx0dGhpcy50YXNrLmR1ZURhdGVGb3JtYXR0ZWRcblx0XHQpXG5cblx0XHQvLyBpY29uc1xuXHRcdGNvbnN0IGVkaXQgPSB0aGlzLnJlbmRlckluZm8oXCJkaXZcIiwgXCJ0YXNrRWRpdFwiKTtcblx0XHRjb25zdCBlZGl0SWNvbiA9IHRoaXMucmVuZGVySW5mbyhcImlcIiwgXCJtYXRlcmlhbC1pY29uc1wiLCBcImVkaXRcIik7XG5cdFx0ZWRpdC5hcHBlbmRDaGlsZChlZGl0SWNvbik7XG5cblx0XHRjb25zdCB0YXNrRGVsID0gdGhpcy5yZW5kZXJJbmZvKFwiZGl2XCIsIFwidGFza0RlbFwiKTtcblx0XHRjb25zdCBkZWxJY29uID0gdGhpcy5yZW5kZXJJbmZvKFwiaVwiLCBcIm1hdGVyaWFsLWljb25zXCIsIFwiZGVsZXRlXCIpO1xuXHRcdFx0XG5cdFx0Ly8gQWRkIHVuaXF1ZSBpZCBpZGVudGlmZXIgYmFzZWQgb24gdGFzayBpZCBmb3IgYmluIGljb24uXG5cdFx0dGFza0RlbC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgZGVsVGFzay0ke3RoaXMudGFzay5pZH1gKVxuXG5cdFx0Ly8gQ3JlYXRlIERhdGFzZXQ/P1xuXHRcdC8vIGRlbEljb24uZGF0YXNldC5pZCA9IHRoaXMudGFzay5pZDtcblxuXHRcdHRhc2tEZWwuYXBwZW5kQ2hpbGQoZGVsSWNvbik7XG5cblx0XHRyZXR1cm4gW3N0YXR1c0NoZWNrLCBuYW1lLCBkZXRhaWxzQnRuLCBwcmlvcml0eSwgZGF0ZSwgZWRpdCwgdGFza0RlbF07XG5cdH1cblx0ZHJhdygpIHtcblx0XHRjb25zdCB0YXNrQ29udGFpbmVyID0gdGhpcy5yZW5kZXJJbmZvKFwiZGl2XCIsIFwidGFzay1jb250YWluZXJcIik7XG5cdFx0Y29uc3QgZWxlbXMgPSB0aGlzLmNyZWF0ZUVsZW1lbnRzKHRhc2tDb250YWluZXIpO1xuXHRcdGZvciAobGV0IGVsZW0gb2YgZWxlbXMpIHtcblx0XHRcdHRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoZWxlbSk7XG5cdFx0fVxuXHRcdHJldHVybiB0YXNrQ29udGFpbmVyO1xuXHR9XG59XG5cbmNsYXNzIFByb2plY3RVSSB7XG5cdGNvbnN0cnVjdG9yKHByb2plY3RPYmopIHtcblx0XHR0aGlzLnByb2plY3QgPSBwcm9qZWN0T2JqO1xuXHR9XG5cdGRyYXcoKSB7XG5cdFx0Y29uc3QgbWFpbkNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW4tY29udGVudFwiKTtcblx0XHR0aGlzLmNsZWFyKG1haW5Db250ZW50KTtcblxuXHRcdC8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHRhc2tzIGFuZCBnaXZlIGl0IGEgVGFza1VJIGNsYXNzLlxuXHRcdC8vIFVzZSB0aGUgZHJhdyBtZXRob2QgdG8gZ2V0IHRoZSBkaXYgY29udGFpbmVyIGFuZCBhcHBlbmQgaXQgdG9cbiAgICAgICAgLy8gbWFpbkNvbnRlbnQgY29udGFpbmVyLlxuXHRcdHRoaXMuZHJhd1Rhc2tzKG1haW5Db250ZW50LCB0aGlzLnByb2plY3QudGFza3MpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tPcHRpb24gPSB0aGlzLmFkZFRhc2tPcHRpb24oKTtcblx0XHRtYWluQ29udGVudC5hcHBlbmRDaGlsZChhZGRUYXNrT3B0aW9uKTtcblx0fVxuICAgIGFkZFRhc2tPcHRpb24oKSB7XG4gICAgICAgIC8vIERyYXcgYW4gYWRkIHRhc2sgb3B0aW9uIGJlbmVhdGggYWxsIHRhc2tzXG4gICAgICAgIGNvbnN0IGFkZFRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBhZGRUYXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0YXNrLWNvbnRhaW5lclwiKTtcbiAgICAgICAgYWRkVGFza0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiYWRkXCIpO1xuICAgIFxuICAgICAgICBjb25zdCBhZGRUYXNrQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgYWRkVGFza0J0bi5jbGFzc0xpc3QuYWRkKFwidW5pcXVlQnRuXCIpO1xuICAgICAgICBhZGRUYXNrQnRuLmNsYXNzTGlzdC5hZGQoXCJhZGRcIik7XG4gICAgICAgIGFkZFRhc2tCdG4udGV4dENvbnRlbnQgPSBcIkFERFwiO1xuICAgIFxuICAgICAgICBhZGRUYXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKGFkZFRhc2tCdG4pO1xuICAgICAgICByZXR1cm4gYWRkVGFza0NvbnRhaW5lclxuICAgICAgICBcbiAgICB9XG5cdGRyYXdUYXNrcyhjb250YWluZXIsIHRhc2tzKSB7XG4gICAgICAgIGZvciAobGV0IHRhc2sgb2YgdGFza3MpIHtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tEaXNwbGF5ID0gbmV3IFRhc2tVSSh0YXNrKTtcblx0XHRcdGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrRGlzcGxheS5kcmF3KCkpO1xuXHRcdH1cblx0fVxuXG5cdGNsZWFyKGNvbnRlbnQpIHtcblx0XHRjb250ZW50LmlubmVySFRNTCA9IFwiXCI7XG5cdH1cblxuXHRjb21wbGV0ZVRhc2soKSB7XG5cdFx0Ly8gTWFrZSB0YXNrIGNvbnRhaW5lciB0cmFuc3BhcmVudCBhZnRlciBjb21wbGV0aW5nIHRhc2suXG5cdFx0Y29uc3QgY2hlY2tCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgpO1xuXHR9XG59XG5cbmV4cG9ydCB7IFRhc2tVSSwgUHJvamVjdFVJIH07XG4iLCJpbXBvcnQgVUkgZnJvbSAnLi9tb2R1bGVzL1VJJztcbmNvbnN0IFVzZXJJbnRlcmZhY2UgPSBuZXcgVUkoKTtcblxuVXNlckludGVyZmFjZS5sb2FkSG9tZVBhZ2UoKTsiLCJpbXBvcnQgVGFzayBmcm9tIFwiLi90YXNrXCI7XG5pbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZWN0XCI7XG5pbXBvcnQgQWxsUHJvamVjdHMgZnJvbSBcIi4vQWxsUHJvamVjdHNcIjtcbmltcG9ydCB7IFRhc2tVSSwgUHJvamVjdFVJIH0gZnJvbSBcIi4vVUkvUHJvamVjdFVJXCI7XG5pbXBvcnQgeyBEcmF3Rm9ybSB9IGZyb20gXCIuL1VJL2Zvcm1cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUkge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLnRvRG9MaXN0ID0gbmV3IEFsbFByb2plY3RzKCk7XG5cblx0XHQvLyBJbml0aWFsaXNlIGZpcnN0IGhvbWVQYWdlIHRvIGJlIG9uIHRoZSBcIkluYm94XCIgcGFnZS5cblx0XHR0aGlzLmN1cnJlbnRQcm9qZWN0UGFnZSA9IFwiSW5ib3hcIjtcblx0XHR0aGlzLmN1cnJlbnRGb3JtID0gRHJhd0Zvcm0oKTtcblx0fVxuXG5cdGxvYWRIb21lUGFnZSgpIHtcblx0XHQvLyBJbml0aWFsaXNlIGZpcnN0IGR1bW15IHRhc2s6XG5cdFx0Y29uc3QgdGFzazEgPSB7XG5cdFx0XHR0aXRsZTogXCJXYWxraW5nIHRoZSBkb2dcIixcblx0XHRcdGRldGFpbHM6IFwiSGUgaXMgYXNraW5nIGZvciBpdCBzbyB0aGlzIHRhc2sgaXMgYSBtdXN0XCIsXG5cdFx0XHRwcmlvcml0eTogXCJtZWRpdW1cIixcblx0XHRcdGRhdGU6IFwiMjUtMDItMjAwMlwiLFxuXHRcdH07XG5cdFx0dGhpcy5hZGROZXdUYXNrKHRoaXMuY3VycmVudFByb2plY3RQYWdlLCB0YXNrMSk7XG5cblx0XHR0aGlzLmxvYWRTaWRlQmFyKCk7XG5cdH1cblxuXHRsb2FkUGFnZShwcm9qZWN0TmFtZSkge1xuXHRcdC8vIFdlIG5lZWQgdG8gcmVzZXQgYWxsIGlkcyBvbiBhbGwgdGFza3MgdG8gcHJldmVudFxuXHRcdC8vIGRlbGV0aW9uIG9mIHR3byB0YXNrcyB3aXRoIHRoZSBzYW1lIGlkIGF0IG9uY2UuXG5cdFx0dGhpcy50b0RvTGlzdC5nZXRQcm9qZWN0KHByb2plY3ROYW1lKS5yZUluaXRpYWxpc2VJZCgpO1xuXG5cdFx0dGhpcy5kcmF3UGFnZShwcm9qZWN0TmFtZSk7XG5cblx0XHQvLyBSZWluaXRpYWxpc2UgYWRkIHRhc2sgZnVuY3Rpb24gZm9yIG5ldyBwYWdlJ3MgYnRuLlxuXHRcdHRoaXMuYWRkVGFza0Z1bmN0aW9uKHByb2plY3ROYW1lKTtcblx0XHQvLyBBcHBseSBldmVudGxpc3RlbmVycyBmb3IgZWFjaCBjb3JyZXNwb25kaW5nIGJpbiBpY29ucy5cblx0XHR0aGlzLmFwcGx5RGVsVGFza0Z1bmN0aW9uKHByb2plY3ROYW1lKTtcblx0fVxuXG5cdGRyYXdQYWdlKHByb2plY3ROYW1lKSB7XG5cdFx0Y29uc3QgcHJvamVjdERpc3BsYXkgPSBuZXcgUHJvamVjdFVJKHRoaXMudG9Eb0xpc3QuZ2V0UHJvamVjdChwcm9qZWN0TmFtZSkpO1xuXHRcdHByb2plY3REaXNwbGF5LmRyYXcoKTtcblx0fVxuXG5cdC8qIEJ1dHRvbiBmdW5jdGlvbmFsaXRpZXMgKi9cblx0YWRkVGFza0Z1bmN0aW9uKHByb2plY3ROYW1lKSB7XG5cdFx0Y29uc3QgYWRkVGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudW5pcXVlQnRuLmFkZFwiKTtcblx0XHRhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cblx0XHRcdC8vIENsZWFyIGFueSBjdXJyZW50IGZvcm0gYW5kIGRyYXcgdGhlIGFkZCB0YXNrIGZvcm0uXG5cdFx0XHR0aGlzLmN1cnJlbnRGb3JtLmNsZWFyKCk7XG5cdFx0XHR0aGlzLmN1cnJlbnRGb3JtLmFkZFRhc2soKTtcblx0XHRcdC8vIFNldCB0aGUgZGVmYXVsdCBjaGVja2VkIHJhZGlvIGJ1dHRvbiB0byBNZWRpdW0gUHJpb3JpdHkuXG5cdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lZFByaW9cIikuY2hlY2tlZCA9IHRydWU7XG5cdFx0XHRcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZmFjZS1tYXNrXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcblxuXHRcdFx0Ly8gU2V0IGRlZmF1bHQgZGF0ZSBpbnB1dCB0byBjdXJyZW50IGRheS5cblx0XHRcdGlucHV0RHVlRGF0ZS52YWx1ZUFzRGF0ZSA9IG5ldyBEYXRlKCk7XG5cblx0XHRcdC8vIEFkZCBkcmF3IG5ldyB0YXNrIGZ1bmN0aW9uYWxpdHkgdG8gYXBwZW5kVGFza0J0biBvbiB0aGUgZm9ybS5cblx0XHRcdGNvbnN0IGFwcGVuZFRhc2tCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnVuaXF1ZUJ0bi5hcHBlbmRUYXNrQnRuXCIpO1xuXHRcdFx0dGhpcy5zdWJtaXRUYXNrRnVuY3Rpb24oYXBwZW5kVGFza0J0biwgcHJvamVjdE5hbWUpO1xuXHRcdH0pO1xuXHR9XG5cblx0YWRkTmV3VGFzayhwcm9qZWN0TmFtZSwgdGFza0luZm8pIHtcblx0XHR0aGlzLnRvRG9MaXN0XG5cdFx0XHQuZ2V0UHJvamVjdChwcm9qZWN0TmFtZSlcblx0XHRcdC5hZGRUYXNrKFxuXHRcdFx0XHRuZXcgVGFzayhcblx0XHRcdFx0XHR0YXNrSW5mb1tcInRpdGxlXCJdLFxuXHRcdFx0XHRcdHRhc2tJbmZvW1wiZGV0YWlsc1wiXSxcblx0XHRcdFx0XHR0YXNrSW5mb1tcImRhdGVcIl0sXG5cdFx0XHRcdFx0dGFza0luZm9bXCJwcmlvcml0eVwiXSxcblx0XHRcdFx0XHR0aGlzLnRvRG9MaXN0LmdldFByb2plY3QocHJvamVjdE5hbWUpLnRhc2tzLmxlbmd0aFxuXHRcdFx0XHQpXG5cdFx0XHQpO1xuXHRcdHRoaXMubG9hZFBhZ2UocHJvamVjdE5hbWUpO1xuXHR9XG5cblx0c3VibWl0VGFza0Z1bmN0aW9uKGJ0biwgcHJvamVjdE5hbWUpIHtcblx0XHRidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuXHRcdFx0Y29uc3QgdGFza0luZm8gPSB0aGlzLmN1cnJlbnRGb3JtLmNvbGxlY3RUYXNrSW5mbygpO1xuXHRcdFx0dGhpcy5hZGROZXdUYXNrKHByb2plY3ROYW1lLCB0YXNrSW5mbyk7XG5cblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuXHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mYWNlLW1hc2tcIikuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH0pO1xuXHR9XG5cblx0cmVtb3ZlVGFza0Z1bmN0aW9uKHByb2plY3ROYW1lLCB0YXNrSWQpIHtcblx0XHQvLyBBZGQgZGVsZXRlIHRhc2sgZnVuY3Rpb25zIGZvciBlYWNoIGV4aXN0aW5nIHRhc2tVSS5cblx0XHRjb25zdCBkZWxJbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgZGVsVGFzay0ke3Rhc2tJZH1gKTtcblx0XHRkZWxJbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcblx0XHRcdHRoaXMudG9Eb0xpc3QuZ2V0UHJvamVjdChwcm9qZWN0TmFtZSkuZGVsZXRlVGFzayh0YXNrSWQpO1xuXHRcdFx0dGhpcy5sb2FkUGFnZShwcm9qZWN0TmFtZSk7XG5cdFx0fSk7XG5cdH1cblx0YXBwbHlEZWxUYXNrRnVuY3Rpb24ocHJvamVjdE5hbWUpIHtcblx0XHQvLyBGb3IgYWxsIHRoZSB0YXNrcyBpbiB0aGUgcHJvamVjdCwgYWRkIHJlbW92ZVRhc2sgZnVuY3Rpb25hbGl0eSBmb3Jcblx0XHQvLyBlYWNoIHRhc2suXG5cdFx0dGhpcy50b0RvTGlzdC5nZXRQcm9qZWN0KHByb2plY3ROYW1lKS50YXNrcy5tYXAoKHRhc2spID0+IHtcblx0XHRcdHRoaXMucmVtb3ZlVGFza0Z1bmN0aW9uKHByb2plY3ROYW1lLCB0YXNrLmlkKTtcblx0XHR9KTtcblx0fVxuXG5cdC8qIFNpZGVCYXIgZnVuY3Rpb25hbGl0aWVzICovXG5cdGxvYWRTaWRlQmFyKCkge1xuXHRcdHRoaXMuYWRkU2xpZGVJbk91dCgpO1xuXHRcdHRoaXMuZHJhd0luYm94VGFicygpO1xuXHRcdHRoaXMuZHJhd1Byb2plY3RUYWJzKCk7XG5cdH1cblxuXHRkcmF3SW5ib3hUYWJzKCkge1xuXHRcdC8vIEFkZCB0b2RheSBhbmQgdGhpcyB3ZWVrJ3MgdGFzayBiZW5lYXRoIEluYm94IHRhYiBzaWRlYmFyLlxuXHRcdGNvbnN0IGluYm94VGFicyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcblxuXHRcdHRoaXMuYWRkVGFiKGluYm94VGFicywgXCJUb2RheVwiKTtcblx0XHR0aGlzLmFkZFRhYihpbmJveFRhYnMsIFwiVGhpcyBXZWVrXCIpO1xuXG5cdFx0Y29uc3QgaW5ib3hCYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmluYm94LWJhclwiKTtcblx0XHRpbmJveEJhci5hcHBlbmRDaGlsZChpbmJveFRhYnMpO1xuXHRcdHRoaXMuYWRkRHJvcERvd25NZW51KGluYm94QmFyLCBpbmJveFRhYnMpO1xuXHR9XG5cblx0ZHJhd1Byb2plY3RUYWJzKCkge1xuXHRcdC8vIEZpbmQgYWxsIG90aGVyIHByb2plY3RzLlxuXHRcdGNvbnN0IGluYm94UHJvamVjdHMgPSBbXCJJbmJveFwiLCBcIlRvZGF5XCIsIFwiVGhpcyBXZWVrXCJdO1xuXHRcdGNvbnN0IGN1c3RvbVByb2plY3RzID0gdGhpcy50b0RvTGlzdC5wcm9qZWN0cy5maWx0ZXIoXG5cdFx0XHQocHJvamVjdCkgPT4gIWluYm94UHJvamVjdHMuaW5jbHVkZXMocHJvamVjdC5uYW1lKVxuXHRcdCk7XG5cblx0XHRjb25zdCBwcm9qZWN0VGFicyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcblx0XHRmb3IgKGxldCBwcm9qZWN0IG9mIGN1c3RvbVByb2plY3RzKSB7XG5cdFx0XHR0aGlzLmFkZFRhYihwcm9qZWN0VGFicywgcHJvamVjdC5uYW1lKTtcblx0XHR9XG5cblx0XHRjb25zdCBwcm9qZWN0QmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWJhclwiKTtcblx0XHRwcm9qZWN0QmFyLmFwcGVuZENoaWxkKHByb2plY3RUYWJzKTtcblx0XHR0aGlzLmFkZERyb3BEb3duTWVudShwcm9qZWN0QmFyLCBwcm9qZWN0VGFicyk7XG5cdH1cblxuXHRhZGREcm9wRG93bk1lbnUobWVudUJhciwgdGFicykge1xuXHRcdC8vIFRhYnMgd2lsbCBiZSBlbG9uZ2F0ZWQgYmFzZWQgb24gdGFiIGhvdmVyZWQuXG5cdFx0bWVudUJhci5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsICgpID0+IHtcblx0XHRcdHRhYnMuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcblx0XHR9KTtcblx0XHRtZW51QmFyLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCAoKSA9PiB7XG5cdFx0XHR0YWJzLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblx0XHR9KTtcblx0fVxuXHRhZGRUYWIobWVudVRhYiwgcHJvamVjdE5hbWUpIHtcblx0XHQvLyBDcmVhdGUgbGkgYW5kIGFwcGVuZCBpdCB0byBnaXZlbiBwYXJhbSBlbGVtLlxuXHRcdGNvbnN0IHRhYiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcblxuXHRcdHRhYi50ZXh0Q29udGVudCA9IHRoaXMudG9Eb0xpc3QuZ2V0UHJvamVjdChwcm9qZWN0TmFtZSkubmFtZTtcblx0XHRtZW51VGFiLmFwcGVuZENoaWxkKHRhYik7XG5cdH1cblxuXHRhZGRTbGlkZUluT3V0KCkge1xuXHRcdGNvbnN0IHNpZGVCYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpZGVCYXJcIik7XG5cdFx0c2lkZUJhci5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsICgpID0+IHtcblx0XHRcdHNpZGVCYXIuc3R5bGUud2lkdGggPSBcIjIwMHB4XCI7XG5cdFx0fSk7XG5cdFx0c2lkZUJhci5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgKCkgPT4ge1xuXHRcdFx0c2lkZUJhci5zdHlsZS53aWR0aCA9IFwiNjVweFwiO1xuXHRcdH0pO1xuXHR9XG59XG4iLCJleHBvcnQge0RyYXdGb3JtfVxuXG5jb25zdCBEcmF3Rm9ybSA9ICgpID0+IHtcbiAgICAvLyBXaGVuIHVzZXIgcHJlc3NlcyBhZGQgdGFzaywgcG9wIHVwIGEgZm9ybSB0aGF0IGFza3MgZm9yIGFsbCByZXEgaW5wdXQuXG4gICAgLy8gVGhpcyBpbmNsdWRlcyBbdGFza05hbWUsIGRldGFpbHMsIHByaW9yaXR5TGV2ZWwsIERhdGVdO1xuICAgIGNvbnN0IGZvcm1Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1jb250YWluZXInKTtcblxuICAgIGNvbnN0IGNsZWFyID0gKCkgPT4ge1xuICAgICAgICB3aGlsZShmb3JtQ29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIGZvcm1Db250YWluZXIucmVtb3ZlQ2hpbGQoZm9ybUNvbnRhaW5lci5sYXN0Q2hpbGQpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBhZGRUYXNrID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB0YXNrVGl0bGUgPSBhZGRJbnB1dFRleHQoJ1Rhc2sgVGl0bGU6ICcsICdlLmcuIExlYXJuIFJlYWN0IGluICcgK1xuICAgICAgICAnMjAgZGF5cy4uJywgJ2lucHV0VGFza1RpdGxlJyk7XG4gICAgICAgIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKCdpbnB1dFRhc2tUaXRsZScpO1xuXG4gICAgICAgIGNvbnN0IHRhc2tEZXRhaWxzID0gYWRkVGV4dEFyZWEoJ1Rhc2sgRGV0YWlsczogJywgJ2UuZy4gTm90IGFuICcgK1xuICAgICAgICAndGFzay4gUmVtZW1iZXIgdG8gdGFrZSBicmVha3MgYW5kIHdhbGsgb3V0c2lkZS4nLFxuICAgICAgICAgJ2lucHV0VGFza0RldGFpbHMnKTtcbiAgICAgICAgdGFza0RldGFpbHMuY2xhc3NMaXN0LmFkZCgnaW5wdXRUYXNrRGV0YWlscycpOyBcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHByaW9PcHRpb25zID0gYWRkUHJpb3JpdHlPcHRpb25zKCk7XG4gICAgICAgIGNvbnN0IGR1ZURhdGUgPSBhZGRJbnB1dER1ZURhdGUoKTtcbiAgICAgICAgY29uc3QgY2xvc2VGb3JtT3B0aW9uID0gYWRkQ2xvc2VGb3JtRnVuY3Rpb24oKTtcblxuICAgICAgICBjb25zdCB0YXNrc0luZm8gPSBbdGFza1RpdGxlLCB0YXNrRGV0YWlscywgcHJpb09wdGlvbnMsIGR1ZURhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2VGb3JtT3B0aW9uXTtcblxuICAgICAgICBmb3IobGV0IGluZm8gb2YgdGFza3NJbmZvKSB7XG4gICAgICAgICAgICBmb3JtQ29udGFpbmVyLmFwcGVuZENoaWxkKGluZm8pO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEFkZCBzdWJtaXQgYnRuLlxuICAgICAgICBjb25zdCBhcHBlbmRUYXNrQnRuID0gYWRkQXBwZW5kVGFza0J0bigpO1xuICAgICAgICBcbiAgICAgICAgZm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChhcHBlbmRUYXNrQnRuKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZWRQcmlvXCIpLmNoZWNrZWQgPSB0cnVlO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgYWRkQXBwZW5kVGFza0J0biA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgYXBwZW5kVGFza0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICBhcHBlbmRUYXNrQnRuLmNsYXNzTGlzdC5hZGQoJ3VuaXF1ZUJ0bicpO1xuICAgICAgICBhcHBlbmRUYXNrQnRuLmNsYXNzTGlzdC5hZGQoJ2FwcGVuZFRhc2tCdG4nKTtcbiAgICAgICAgYXBwZW5kVGFza0J0bi50ZXh0Q29udGVudCA9ICdBZGQgVGFzayc7XG4gICAgICAgIGFwcGVuZFRhc2tCdG4uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInN1Ym1pdFwiKTtcbiAgICAgICAgXG4gICAgICAgIC8vIGFwcGVuZFRhc2tCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgICAvLyAgICAgYXBwZW5kVGFza0Z1bmN0aW9uKGV2ZW50KVxuICAgICAgICAvLyB9KTtcblxuICAgICAgICByZXR1cm4gYXBwZW5kVGFza0J0bjtcbiAgICB9XG5cbiAgICBjb25zdCBjb2xsZWN0VGFza0luZm8gPSAoKSA9PiB7XG4gICAgICAgIC8vIENvbGxlY3QgYWxsIHJlbGV2YW50IGluZm9ybWF0aW9uIGJhc2VkIG9uIHVzZXIgaW5wdXQgYW5kIHJldHVyblxuICAgICAgICAvLyBpdCBpbiBhbiBvYmouXG4gICAgICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnB1dFRhc2tUaXRsZScpO1xuICAgICAgICBjb25zdCB0YXNrRGV0YWlscyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnB1dFRhc2tEZXRhaWxzJyk7XG4gICAgICAgIGNvbnN0IHByaW9DaG9zZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgJ2lucHV0W25hbWU9XCJwcmlvXCJdOmNoZWNrZWQnKTtcbiAgICAgICAgY29uc3QgZGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbnB1dER1ZURhdGUnKTtcblxuICAgICAgICBjb25zdCB0YXNrSW5mbyA9IHtcbiAgICAgICAgICAgICd0aXRsZSc6IHRhc2tUaXRsZS52YWx1ZSxcbiAgICAgICAgICAgICdkZXRhaWxzJzogdGFza0RldGFpbHMudmFsdWUsXG4gICAgICAgICAgICAncHJpb3JpdHknOiBwcmlvQ2hvc2VuLnZhbHVlLFxuICAgICAgICAgICAgJ2RhdGUnOiBkYXRlLnZhbHVlLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGFza0luZm87IFxuICAgIH1cblxuICAgIGNvbnN0IGFkZENsb3NlRm9ybUZ1bmN0aW9uID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBjbG9zZUZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAgICAgY2xvc2VGb3JtLmNsYXNzTGlzdC5hZGQoJ2Nsb3NlRm9ybUJ0bicpO1xuICAgICAgICBjbG9zZUZvcm0uc3JjID0gJy4uLy4uLy4uL2ltZ3MvbWFjLWNsb3NlLWJ0bi5wbmcnO1xuICAgICAgICBjbG9zZUZvcm0uYWx0ID0gJ0EgYnV0dG9uIHRoYXQgY2xvc2VzIHRoZSBmb3JtLic7XG5cbiAgICAgICAgY2xvc2VGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbiAgICAgICAgICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmFjZS1tYXNrJyk7XG4gICAgICAgICAgICBmb3JtLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICAgICAgICAgIG92ZXJsYXkuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gY2xvc2VGb3JtO1xuICAgIH07XG5cbiAgICBjb25zdCBhZGRJbnB1dER1ZURhdGUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgICAgICBjb25zdCBkYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBkYXRlTGFiZWwuY2xhc3NMaXN0LmFkZCgnZGF0ZUxhYmVsJyk7XG4gICAgICAgIGRhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdpbnB1dER1ZURhdGUnKTtcbiAgICAgICAgZGF0ZUxhYmVsLnRleHRDb250ZW50ID0gJ0R1ZSBEYXRlOic7XG5cbiAgICAgICAgY29uc3QgaW5wdXREdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgICAgaW5wdXREdWVEYXRlLnNldEF0dHJpYnV0ZSgndHlwZScsIFwiZGF0ZVwiKTtcbiAgICAgICAgaW5wdXREdWVEYXRlLnNldEF0dHJpYnV0ZSgnaWQnLCAnaW5wdXREdWVEYXRlJyk7XG4gICAgICAgIGlucHV0RHVlRGF0ZS5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAndHJpcC1zdGFydCcpO1xuXG4gICAgICAgIGR1ZURhdGUuYXBwZW5kQ2hpbGQoZGF0ZUxhYmVsKTtcbiAgICAgICAgZHVlRGF0ZS5hcHBlbmRDaGlsZChpbnB1dER1ZURhdGUpO1xuICAgICAgICByZXR1cm4gZHVlRGF0ZTtcbiAgICB9XG5cbiAgICBjb25zdCBhZGRQcmlvcml0eU9wdGlvbnMgPSAoKSA9PiB7XG4gICAgICAgIC8vIEEgd3JhcHBlciBpcyBnb2luZyB0byB3cmFwIHRoZSBsYWJlbCBhbmQgYSBjb250YWluZXIgY29uc2lzdGluZyBvZlxuICAgICAgICAvLyB0aGUgcmFkaW8gb3B0aW9ucy4gXG4gICAgICAgIGNvbnN0IGlucHV0UHJpb1dyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgY29uc3QgcHJpb09wdGlvbnNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgaW5wdXRQcmlvV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdwcmlvV3JhcHBlcicpXG4gICAgICAgIHByaW9PcHRpb25zQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3ByaW9PcHRpb25zJyk7XG5cbiAgICAgICAgbGFiZWwuY2xhc3NMaXN0LmFkZCgncHJpb0xhYmVsJyk7XG4gICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gXCJIb3cgaW1wb3J0YW50IGlzIHRoaXMgdGFzaz9cIjtcbiAgICAgICAgY29uc3QgbG93UHJpbyA9IGNyZWF0ZVJhZGlvSW5wdXRBbmRMYWJlbCgnbG93UHJpbycsICdsb3cnKTtcbiAgICAgICAgY29uc3QgbWVkUHJpbyA9IGNyZWF0ZVJhZGlvSW5wdXRBbmRMYWJlbCgnbWVkUHJpbycsICdtZWRpdW0nKTtcbiAgICAgICAgY29uc3QgaGlnaFByaW8gPSBjcmVhdGVSYWRpb0lucHV0QW5kTGFiZWwoJ2hpZ2hQcmlvJywgJ2hpZ2gnKTtcblxuICAgICAgICBmb3IobGV0IHByaW9PcHRpb25zIG9mIFtsb3dQcmlvLCBtZWRQcmlvLCBoaWdoUHJpb10pIHtcbiAgICAgICAgICAgIHByaW9PcHRpb25zQ29udGFpbmVyLmFwcGVuZENoaWxkKHByaW9PcHRpb25zKTtcbiAgICAgICAgfTtcblxuICAgICAgICBpbnB1dFByaW9XcmFwcGVyLmFwcGVuZENoaWxkKGxhYmVsKTtcbiAgICAgICAgaW5wdXRQcmlvV3JhcHBlci5hcHBlbmRDaGlsZChwcmlvT3B0aW9uc0NvbnRhaW5lcik7XG4gICAgICAgIHJldHVybiBpbnB1dFByaW9XcmFwcGVyO1xuXG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVJhZGlvSW5wdXRBbmRMYWJlbChpZCwgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHJhZGlvT3B0aW9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICBjb25zdCBhdHRyaWJ1dGVzID0ge1xuICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcInJhZGlvXCIsXG4gICAgICAgICAgICAgICAgXCJpZFwiOiBpZCxcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogJ3ByaW8nLFxuICAgICAgICAgICAgICAgIFwidmFsdWVcIjogdmFsdWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZm9yKGxldCBhdHRyIGluIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoYXR0ciwgYXR0cmlidXRlc1thdHRyXSk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgICAgICBsYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGlkKTtcbiAgICAgICAgICAgIGxhYmVsLmNsYXNzTGlzdC5hZGQoaWQpO1xuICAgICAgICAgICAgbGFiZWwudGV4dENvbnRlbnQgPSB2YWx1ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmFkaW9PcHRpb25Db250YWluZXIuYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgICAgICAgcmFkaW9PcHRpb25Db250YWluZXIuYXBwZW5kQ2hpbGQobGFiZWwpO1xuICAgICAgICAgICAgcmV0dXJuIHJhZGlvT3B0aW9uQ29udGFpbmVyO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IGFkZFRleHRBcmVhID0gKGxhYmVsTmFtZSwgcGxhY2Vob2xkZXIsIGlkLCByZXF1aXJlZD10cnVlKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICAgICAgY29uc3QgaW5wdXRMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIGlucHV0TGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBpZCk7XG4gICAgICAgIGlucHV0TGFiZWwudGV4dENvbnRlbnQgPSBsYWJlbE5hbWU7XG5cbiAgICAgICAgY29uc3QgaW5wdXRUZXh0QXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgICAgICAnaWQnOiBpZCxcbiAgICAgICAgICAgICduYW1lJzogaWQsXG4gICAgICAgICAgICAncGxhY2Vob2xkZXInOiBwbGFjZWhvbGRlcixcbiAgICAgICAgICAgICdyb3dzJzogNixcbiAgICAgICAgICAgICdjb2xzJzogNTAsXG4gICAgICAgIH07XG5cbiAgICAgICAgZm9yKGxldCBhdHRySWR4IGluIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGlucHV0VGV4dEFyZWEuc2V0QXR0cmlidXRlKGF0dHJJZHgsIGF0dHJpYnV0ZXNbYXR0cklkeF0pXG4gICAgICAgIH1cbiAgICAgICAgaW5wdXRUZXh0QXJlYS5yZXF1aXJlZCA9IHJlcXVpcmVkOyAvLyBEZWZhdWx0IFRydWVcblxuICAgICAgICBpbnB1dC5hcHBlbmRDaGlsZChpbnB1dExhYmVsKTtcbiAgICAgICAgaW5wdXQuYXBwZW5kQ2hpbGQoaW5wdXRUZXh0QXJlYSk7XG4gICAgICAgIHJldHVybiBpbnB1dFxuICAgIH1cblxuICAgIGNvbnN0IGFkZElucHV0VGV4dCA9IChsYWJlbE5hbWUsIHBsYWNlaG9sZGVyLCBpZCwgcmVxdWlyZWQ9dHJ1ZSkgPT4ge1xuICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgICAgIGNvbnN0IGlucHV0TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgICBpbnB1dExhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgaWQpO1xuICAgICAgICBpbnB1dExhYmVsLnRleHRDb250ZW50ID0gbGFiZWxOYW1lO1xuXG4gICAgICAgIGNvbnN0IGlucHV0VGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgICAgICAndHlwZSc6ICd0ZXh0JyxcbiAgICAgICAgICAgICdpZCc6IGlkLFxuICAgICAgICAgICAgJ25hbWUnOiBpZCxcbiAgICAgICAgICAgICdwbGFjZWhvbGRlcic6IHBsYWNlaG9sZGVyXG4gICAgICAgIH07XG4gICAgICAgIGZvcihsZXQgYXR0cklkeCBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICBpbnB1dFRleHQuc2V0QXR0cmlidXRlKGF0dHJJZHgsIGF0dHJpYnV0ZXNbYXR0cklkeF0pXG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dFRleHQucmVxdWlyZWQgPSByZXF1aXJlZDsgXG5cbiAgICAgICAgaW5wdXQuYXBwZW5kQ2hpbGQoaW5wdXRMYWJlbCk7XG4gICAgICAgIGlucHV0LmFwcGVuZENoaWxkKGlucHV0VGV4dCk7XG4gICAgICAgIHJldHVybiBpbnB1dDtcbiAgICB9XG4gICAgcmV0dXJuIHsgYWRkVGFzaywgY2xlYXIsIGNvbGxlY3RUYXNrSW5mbyB9O1xuXG5cbn0iXSwibmFtZXMiOlsiVGFzayIsImNvbnN0cnVjdG9yIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwiaWQiLCJ0aGlzIiwidmFsdWUiLCJfbmFtZSIsIl9pZCIsIl9wcmlvcml0eSIsIl9kZXNjcmlwdGlvbiIsIl9kdWVEYXRlIiwiZHVlRGF0ZUZvcm1hdHRlZCIsInNwbGl0IiwiUHJvamVjdCIsInRhc2tzIiwiX3Rhc2tzIiwiYWRkVGFzayIsInRhc2siLCJwdXNoIiwiZGVsZXRlVGFzayIsInRhc2tJZCIsImZpbHRlciIsInJlSW5pdGlhbGlzZUlkIiwibmV3SWQiLCJsZW5ndGgiLCJBbGxQcm9qZWN0cyIsInByb2plY3RzIiwiX3Byb2plY3RzIiwiY29udGFpbnMiLCJwcm9qZWN0TmFtZSIsInNvbWUiLCJwcm9qZWN0IiwiZ2V0UHJvamVjdCIsImZpbmQiLCJhZGRQcm9qZWN0IiwibmV3UHJvamVjdE5hbWUiLCJkZWxldGVQcm9qZWN0IiwicHJvamVjdFRvRGVsZXRlIiwic3BsaWNlIiwiaW5kZXhPZiIsIlRhc2tVSSIsInRhc2tPYmoiLCJyZW5kZXJJbmZvIiwiZWxlbSIsImFkZGVkQ2xhc3MiLCJ0ZXh0IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJjcmVhdGVFbGVtZW50cyIsInRhc2tDb250YWluZXIiLCJzdGF0dXNDaGVjayIsInNldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInRhcmdldCIsImNoZWNrZWQiLCJzdHlsZSIsIm9wYWNpdHkiLCJkZXRhaWxzQnRuIiwicHJpb3JpdHlJY29uIiwiYXBwZW5kQ2hpbGQiLCJkYXRlIiwiZWRpdCIsImVkaXRJY29uIiwidGFza0RlbCIsImRlbEljb24iLCJkcmF3IiwiZWxlbXMiLCJQcm9qZWN0VUkiLCJwcm9qZWN0T2JqIiwibWFpbkNvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2xlYXIiLCJkcmF3VGFza3MiLCJhZGRUYXNrT3B0aW9uIiwiYWRkVGFza0NvbnRhaW5lciIsImFkZFRhc2tCdG4iLCJjb250YWluZXIiLCJ0YXNrRGlzcGxheSIsImNvbnRlbnQiLCJpbm5lckhUTUwiLCJjb21wbGV0ZVRhc2siLCJnZXRFbGVtZW50QnlJZCIsInRvRG9MaXN0IiwiY3VycmVudFByb2plY3RQYWdlIiwiY3VycmVudEZvcm0iLCJmb3JtQ29udGFpbmVyIiwiYWRkQ2xvc2VGb3JtRnVuY3Rpb24iLCJjbG9zZUZvcm0iLCJzcmMiLCJhbHQiLCJmb3JtIiwib3ZlcmxheSIsInZpc2liaWxpdHkiLCJhZGRJbnB1dER1ZURhdGUiLCJkYXRlTGFiZWwiLCJpbnB1dER1ZURhdGUiLCJhZGRQcmlvcml0eU9wdGlvbnMiLCJpbnB1dFByaW9XcmFwcGVyIiwibGFiZWwiLCJwcmlvT3B0aW9uc0NvbnRhaW5lciIsImxvd1ByaW8iLCJjcmVhdGVSYWRpb0lucHV0QW5kTGFiZWwiLCJtZWRQcmlvIiwiaGlnaFByaW8iLCJwcmlvT3B0aW9ucyIsInJhZGlvT3B0aW9uQ29udGFpbmVyIiwiaW5wdXQiLCJhdHRyaWJ1dGVzIiwiYXR0ciIsInRhc2tUaXRsZSIsImxhYmVsTmFtZSIsInBsYWNlaG9sZGVyIiwicmVxdWlyZWQiLCJpbnB1dExhYmVsIiwiaW5wdXRUZXh0IiwiYXR0cklkeCIsImFkZElucHV0VGV4dCIsInRhc2tEZXRhaWxzIiwiaW5wdXRUZXh0QXJlYSIsImFkZFRleHRBcmVhIiwidGFza3NJbmZvIiwiaW5mbyIsImFwcGVuZFRhc2tCdG4iLCJhZGRBcHBlbmRUYXNrQnRuIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwibGFzdENoaWxkIiwiY29sbGVjdFRhc2tJbmZvIiwicHJpb0Nob3NlbiIsIkRyYXdGb3JtIiwibG9hZEhvbWVQYWdlIiwiYWRkTmV3VGFzayIsInRpdGxlIiwiZGV0YWlscyIsImxvYWRTaWRlQmFyIiwibG9hZFBhZ2UiLCJkcmF3UGFnZSIsImFkZFRhc2tGdW5jdGlvbiIsImFwcGx5RGVsVGFza0Z1bmN0aW9uIiwidmFsdWVBc0RhdGUiLCJEYXRlIiwic3VibWl0VGFza0Z1bmN0aW9uIiwidGFza0luZm8iLCJidG4iLCJwcmV2ZW50RGVmYXVsdCIsInJlbW92ZVRhc2tGdW5jdGlvbiIsIm1hcCIsImFkZFNsaWRlSW5PdXQiLCJkcmF3SW5ib3hUYWJzIiwiZHJhd1Byb2plY3RUYWJzIiwiaW5ib3hUYWJzIiwiYWRkVGFiIiwiaW5ib3hCYXIiLCJhZGREcm9wRG93bk1lbnUiLCJpbmJveFByb2plY3RzIiwiY3VzdG9tUHJvamVjdHMiLCJpbmNsdWRlcyIsInByb2plY3RUYWJzIiwicHJvamVjdEJhciIsIm1lbnVCYXIiLCJ0YWJzIiwiZGlzcGxheSIsIm1lbnVUYWIiLCJ0YWIiLCJzaWRlQmFyIiwid2lkdGgiXSwic291cmNlUm9vdCI6IiJ9