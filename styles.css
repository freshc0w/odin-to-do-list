:root {
	--default-opacity: 0.05;
}

body,
html {
	/* temp min-width for editing */
	min-width: 2100px;
	height: 100vh;
	width: 100vw;
	font-family: "Montserrat", sans-serif;
	box-sizing: border-box;
	border: 0;
	margin: 0;
	padding: 0;

	display: flex;
	justify-content: center;
	align-items: center;

	background-image: url(/imgs/gray-background-img.jpg);
	/* background-size: 100% auto; */
	background-size: cover;
	background-repeat: no-repeat;
	background-position: left 0% top 0%;
	/* box-shadow: inset 0 0 35px white; */
}

.body-container {
	height: 99%;
	width: 99%;
	/* border: 2px white solid; */

	display: grid;
	grid-template: 50% 50% / 58% 42%;
	align-items: center;
}

.main-container {
	--default-bg-color: rgba(255, 255, 255, var(--default-opacity));

	position: relative;
	display: grid;
	grid-template-rows: 3.25rem auto;
	grid-row: 1 / -1;
	justify-self: center;

	height: max(35rem, 82.5%);
	width: max(700px, 90%);

	border-radius: 1rem;
	box-shadow: 0 0 3px white, 0 0 10px darkgreen;

	background-color: var(--default-bg-color);
	color: white;
}

.navBar {
	background-color: var(--default-bg-color);
}

.main {
	display: flex;
	flex-flow: row nowrap;
}

.sideBar {
	position: sticky;
	z-index: 1;
	top: 0;
	left: 0;
	transition: 0.5s;
	overflow-x: hidden;
	overflow-y: hidden;
	padding-top: 60px;
	white-space: nowrap;
	width: 65px;
	/* height: 100%; */
	border-bottom-left-radius: 1rem;

	background-color: rgb(10, 10, 10);
}

.sideBar a {
	padding: 8px 8px 8px 20px;
	text-decoration: none;
	font-size: 1.25rem;
	color: #a9a7a7;
	display: block;
}

.material-icons:hover,
.icon-text:hover {
	color: white;
	text-shadow: var(--default-white-glow);
}

main .sideBar {
	position: absolute;
	top: 0;
	right: 25px;
	font-size: 36px;
	margin-left: 50px;
	--default-white-glow: 0 0 3px white,
	0 0 3px whitesmoke;
}

.material-icons,
.icon-text {
	vertical-align: middle;
}

.material-icons {
	padding-bottom: 3px;
	margin-right: 20px;
}

ul {
	margin: 0;
	padding-left: 3rem;
	font-size: 1.1rem;
}
li {
	list-style: none;
	margin-top: 5px;
}
li:hover {
	color: white;
	text-shadow: var(--default-white-glow);
}

.content {
	flex: 1;
	display: flex;
	flex-flow: column nowrap;
}

.statusBar {
    /* border: 1px white solid; */
	height: max(15%, 110px);
    margin-bottom: 15px;
    display: flex;
    justify-content: center;
}

img[src$="gif"] {
    height: 90%;
    border-radius: 50%;
    margin-top: 10px;
    background: linear-gradient(145deg, #252525, #2c2c2c);
    background: rgba(0, 0, 0, 0);
    box-shadow:  12px 12px 24px #121212,
    -12px -12px 24px #444444;
}

img[src$="gif"]:hover {
    transform: scale(1.2);
    cursor: pointer;
    transition: all ease 0.6s;
}

#main-content {
    display: flex;
	flex-flow: column nowrap;
    padding: 10px 1px;
    align-items: center;
    overflow: auto;
    overflow-x: hidden;
}

.task-container {
	display: flex;
	flex-flow: row nowrap;
	justify-content: flex-end;
	align-items: center;
	gap: 1.85rem;
	width: 97.5%;
    padding: 0.65rem 1px;
	font-size: 1.5rem;
    text-shadow: 0 0 5px rgb(100, 255, 100);
    background-color: rgba(0, 0, 0, 0.15);
    border-radius: 0.5rem;

    box-shadow: 4px 4px 2px rgba(57, 255, 20, .7),
                2px 2px 5px rgba(10, 255, 255, .7);

    transition: all ease 0.3s;
}

.task-container:hover {
    transform: translateY(-7px);
    box-shadow: 4px 4px 2px rgba(245, 255, 245, .7),
    2px 2px 5px rgba(245, 255, 245, .7);
}


.taskName {
    margin-right: auto;
}

.taskDate {
    text-shadow: 0 0 8px white,
                0 0 3px rgb(100, 255, 100);
}

.task-container .material-icons {
    transform: scale(1.2);
    cursor: pointer;
}

.statusPrio {
    transform: scale(1.5)
}

.task-container .material-icons:hover {
    transform: scale(1.3);
}

.taskEdit,
.statusPrio {
    margin-right: -30px;
}

.material-icons.high {
    color: #FF3131;
    text-shadow: var(--default-white-glow),
                0 0 8px #FF3131,
                0 0 16px #FF3131;
}
.material-icons.medium {
    color: #FF5F1F;
    text-shadow: var(--default-white-glow),
    0 0 8px #FF5F1F,
    0 0 16px #FF5F1F
}
.material-icons.low {
    color: #39FF14;
    text-shadow: var(--default-white-glow),
    0 0 8px #39FF14,
    0 0 16px #39FF14
}

/* Custom Checkbox Styling */
input[type="checkbox"] {
	height: 1.7rem;
	width: 1.7rem;
	margin-left: 1.5rem;
	display: inline-block;
	appearance: none;
	position: relative;
	background-color: #f2ecff;
	border-radius: 15%;
	cursor: pointer;
	overflow: hidden;
}

input[type="checkbox"]::after {
	content: "";
	display: block;
	height: 0.9rem;
	width: 0.4rem;
	border-bottom: 0.31rem solid #a0ffe7;
	border-right: 0.31rem solid #a0ffe7;
	opacity: 0;
	transform: rotate(45deg) translate(-50%, -50%);
	position: absolute;
	top: 45%;
	left: 21%;
	transition: 0.25s ease;
}

input[type="checkbox"]::before {
	content: "";
	display: block;
	height: 0;
	width: 0;
	background-color: #00c896;
	border-radius: 50%;
	opacity: 0.5;
	transform: translate(-50%, -50%);
	position: absolute;
	top: 50%;
	left: 50%;
	transition: 0.3s ease;
}

input[type="checkbox"]:checked::before {
	height: 130%;
	width: 130%;
	opacity: 100%;
}

input[type="checkbox"]:checked::after {
	opacity: 100%;
}

/* Button Styling */
.taskDetailsBtn {
	--green: #1bfd9c;
    margin-right: 0.5rem;
	font-size: 17px;
	padding: 0.3em 1.2em;
	letter-spacing: 0.06em;
	position: relative;
	font-family: inherit;
	border-radius: 1em;
	overflow: hidden;
	transition: all 0.3s;
	line-height: 1.4em;
	border: 2px solid var(--green);
	background: linear-gradient(
		to right,
		rgba(27, 253, 156, 0.1) 1%,
		transparent 40%,
		transparent 60%,
		rgba(27, 253, 156, 0.1) 100%
	);
	color: var(--green);
	box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4),
		0 0 9px 3px rgba(27, 253, 156, 0.1);
	cursor: pointer;
}

.taskDetailsBtn:hover {
	color: #82ffc9;
	box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6),
		0 0 9px 3px rgba(27, 253, 156, 0.2);
    transform: scale(1.1);
}

.taskDetailsBtn:before {
	content: "";
	position: absolute;
	left: -4em;
	width: 4em;
	height: 100%;
	top: 0;
	transition: transform 0.4s ease-in-out;
	background: linear-gradient(
		to right,
		transparent 1%,
		rgba(27, 253, 156, 0.1) 40%,
		rgba(27, 253, 156, 0.1) 60%,
		transparent 100%
	);
}

.taskDetailsBtn:hover:before {
	transform: translateX(15em);
}
